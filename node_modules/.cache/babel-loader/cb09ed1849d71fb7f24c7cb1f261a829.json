{"ast":null,"code":"var _jsxFileName = \"/Users/shankarnarayanan/Documents/GitHub/groceries-ordering-app/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const userName = useSelector(state => state.login.userName);\n  const userAddress = useSelector(state => state.login.userAddress);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const {\n    isLoading: orderIsLoading,\n    sendRequest: orderGroceriesRequest,\n    response: orderResponse,\n    resetResponse: resetOrderResponse\n  } = useHttp();\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  }; //Request to backend for fetching groceries\n\n\n  const submitOrderHandler = async userData => {\n    orderGroceriesRequest({\n      url: \"https://groceries-ordering-app-java.herokuapp.com/api/protected/orderGroceries\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        userDetails: userData,\n        orderedItems: cartCtx.items\n      },\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose,\n      userName: userName,\n      userAddress: userAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Confirming your order...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your order has been placed successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n\n  if (orderResponse.responseCode === 0) {\n    resetOrderResponse();\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!orderIsLoading && !didSubmit && cartModalContent, orderIsLoading && isSubmittingModalContent, !orderIsLoading && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"KIlB9RSptf/Rh1IsyuzOXAOeGXQ=\", false, function () {\n  return [useSelector, useSelector, useHttp];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/shankarnarayanan/Documents/GitHub/groceries-ordering-app/src/components/Cart/Cart.js"],"names":["React","useContext","useState","useEffect","useSelector","Modal","CartItem","classes","CartContext","Checkout","useHttp","Cart","props","userName","state","login","userAddress","isCheckout","setIsCheckout","didSubmit","setDidSubmit","cartCtx","isLoading","orderIsLoading","sendRequest","orderGroceriesRequest","response","orderResponse","resetResponse","resetOrderResponse","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","submitOrderHandler","userData","url","method","headers","body","userDetails","orderedItems","errorMsg","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent","responseCode","clearCart"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,QAAxB,CAA5B;AACA,QAAMG,WAAW,GAAGZ,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,WAAxB,CAA/B;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMmB,OAAO,GAAGpB,UAAU,CAACO,WAAD,CAA1B;AAEA,QAAM;AACJc,IAAAA,SAAS,EAAEC,cADP;AAEJC,IAAAA,WAAW,EAAEC,qBAFT;AAGJC,IAAAA,QAAQ,EAAEC,aAHN;AAIJC,IAAAA,aAAa,EAAEC;AAJX,MAKFnB,OAAO,EALX;AAOA,QAAMoB,WAAW,GAAI,IAAGT,OAAO,CAACS,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGX,OAAO,CAACY,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AACpCf,IAAAA,OAAO,CAACgB,UAAR,CAAmBD,EAAnB;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAIC,IAAD,IAAU;AACnClB,IAAAA,OAAO,CAACmB,OAAR,CAAgBD,IAAhB;AACD,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACzBvB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD,CA1BsB,CA8BtB;;;AACA,QAAMwB,kBAAkB,GAAG,MAAOC,QAAP,IAAoB;AAC7ClB,IAAAA,qBAAqB,CAAC;AACpBmB,MAAAA,GAAG,EAAE,gFADe;AAEpBC,MAAAA,MAAM,EAAE,MAFY;AAGpBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHW;AAMpBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,WAAW,EAAEL,QAAf;AAAyBM,QAAAA,YAAY,EAAE5B,OAAO,CAACY;AAA/C,OANc;AAOpBiB,MAAAA,QAAQ,EAAE;AAPU,KAAD,CAArB;AASD,GAVD;;AAYA,QAAMC,SAAS,gBACb;AAAI,IAAA,SAAS,EAAE5C,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGc,OAAO,CAACY,KAAR,CAAcmB,GAAd,CAAmBb,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACc,IAFb;AAGE,MAAA,MAAM,EAAEd,IAAI,CAACe,MAHf;AAIE,MAAA,KAAK,EAAEf,IAAI,CAACgB,KAJd;AAKE,MAAA,QAAQ,EAAEpB,qBAAqB,CAACqB,IAAtB,CAA2B,IAA3B,EAAiCjB,IAAI,CAACH,EAAtC,CALZ;AAME,MAAA,KAAK,EAAEE,kBAAkB,CAACkB,IAAnB,CAAwB,IAAxB,EAA8BjB,IAA9B;AANT,OACOA,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAeA,QAAMqB,YAAY,gBAChB;AAAK,IAAA,SAAS,EAAElD,OAAO,CAACmD,OAAxB;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAEnD,OAAO,CAAC,aAAD,CAA1B;AAA2C,MAAA,OAAO,EAAEK,KAAK,CAAC+C,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIG3B,QAAQ,iBACP;AAAQ,MAAA,SAAS,EAAEzB,OAAO,CAACqD,MAA3B;AAAmC,MAAA,OAAO,EAAEnB,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,QAAMoB,gBAAgB,gBACpB,QAAC,KAAD,CAAO,QAAP;AAAA,eACGV,SADH,eAEE;AAAK,MAAA,SAAS,EAAE5C,OAAO,CAACuD,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOhC;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGb,UAAU,iBACT,QAAC,QAAD;AACE,MAAA,SAAS,EAAEyB,kBADb;AAEE,MAAA,QAAQ,EAAE9B,KAAK,CAAC+C,OAFlB;AAGE,MAAA,QAAQ,EAAE9C,QAHZ;AAIE,MAAA,WAAW,EAAEG;AAJf;AAAA;AAAA;AAAA;AAAA,YAPJ,EAcG,CAACC,UAAD,IAAewC,YAdlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAmBA,QAAMM,wBAAwB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjC;;AAEA,QAAMC,qBAAqB,gBACzB,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEzD,OAAO,CAACmD,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAEnD,OAAO,CAACqD,MAA3B;AAAmC,QAAA,OAAO,EAAEhD,KAAK,CAAC+C,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAWA,MAAIhC,aAAa,CAACsC,YAAd,KAA+B,CAAnC,EAAsC;AACpCpC,IAAAA,kBAAkB;AAClBT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,OAAO,CAAC6C,SAAR;AACD;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEtD,KAAK,CAAC+C,OAAtB;AAAA,eACG,CAACpC,cAAD,IAAmB,CAACJ,SAApB,IAAiC0C,gBADpC,EAEGtC,cAAc,IAAIwC,wBAFrB,EAGG,CAACxC,cAAD,IAAmBJ,SAAnB,IAAgC6C,qBAHnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApHD;;GAAMrD,I;UACaP,W,EACGA,W,EAWhBM,O;;;KAbAC,I;AAsHN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst Cart = (props) => {\n  const userName = useSelector((state) => state.login.userName);\n  const userAddress = useSelector((state) => state.login.userAddress);\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  const {\n    isLoading: orderIsLoading,\n    sendRequest: orderGroceriesRequest,\n    response: orderResponse,\n    resetResponse: resetOrderResponse,\n  } = useHttp();\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  //Request to backend for fetching groceries\n  const submitOrderHandler = async (userData) => {\n    orderGroceriesRequest({\n      url: \"https://groceries-ordering-app-java.herokuapp.com/api/protected/orderGroceries\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: { userDetails: userData, orderedItems: cartCtx.items },\n      errorMsg: \"Request failed!\",\n    });\n  };\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {isCheckout && (\n        <Checkout\n          onConfirm={submitOrderHandler}\n          onCancel={props.onClose}\n          userName={userName}\n          userAddress={userAddress}\n        />\n      )}\n      {!isCheckout && modalActions}\n    </React.Fragment>\n  );\n\n  const isSubmittingModalContent = <p>Confirming your order...</p>;\n\n  const didSubmitModalContent = (\n    <React.Fragment>\n      <p>Your order has been placed successfully!</p>\n      <div className={classes.actions}>\n        <button className={classes.button} onClick={props.onClose}>\n          Close\n        </button>\n      </div>\n    </React.Fragment>\n  );\n\n  if (orderResponse.responseCode === 0) {\n    resetOrderResponse();\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  }\n\n  return (\n    <Modal onClose={props.onClose}>\n      {!orderIsLoading && !didSubmit && cartModalContent}\n      {orderIsLoading && isSubmittingModalContent}\n      {!orderIsLoading && didSubmit && didSubmitModalContent}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}