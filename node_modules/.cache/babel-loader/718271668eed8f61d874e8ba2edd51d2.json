{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isTenChars = value => value.trim().length >= 10;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    address: true\n  });\n  const userEmail = useSelector(state => state.login.userId);\n  const {\n    isLoading: profileIsLoading,\n    sendRequest: sendProfileRequest,\n    response: profileResponse\n  } = useHttp();\n  const nameInputRef = useRef();\n  const addressInputRef = useRef(); //Request to backend for fetching groceries\n\n  const FetchProfileHandler = async requestJson => {\n    sendProfileRequest({\n      url: \"https://groceries-ordering-app-java.herokuapp.com/api/protected/fetchProfile\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        userEmail: requestJson.userEmail\n      },\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredAddressIsValid = isTenChars(enteredAddress);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      address: enteredAddressIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredAddressIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      address: enteredAddress\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const addressControlClasses = `${classes.control} ${formInputsValidity.address ? \"\" : classes.invalid}`; //FETCHING PROFILE DATA\n\n  useEffect(() => {\n    const requestJson = {\n      userEmail\n    };\n    FetchProfileHandler(requestJson);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        value: profileResponse.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addressControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        ref: addressInputRef,\n        value: profileResponse.userAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), !formInputsValidity.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your full Address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"mF/K/xu5pmOdmwNPjhYCPnS3syo=\", false, function () {\n  return [useSelector, useHttp];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/Cart/Checkout.js"],"names":["useEffect","useRef","useState","useHttp","useSelector","classes","isEmpty","value","trim","isTenChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","address","userEmail","state","login","userId","isLoading","profileIsLoading","sendRequest","sendProfileRequest","response","profileResponse","nameInputRef","addressInputRef","FetchProfileHandler","requestJson","url","method","headers","body","errorMsg","confirmHandler","event","preventDefault","enteredName","current","enteredAddress","enteredNameIsValid","enteredAddressIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","addressControlClasses","form","userName","userAddress","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { useSelector } from \"react-redux\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isTenChars = (value) => value.trim().length >= 10;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    address: true,\r\n  });\r\n\r\n  const userEmail = useSelector((state) => state.login.userId);\r\n\r\n  const {\r\n    isLoading: profileIsLoading,\r\n    sendRequest: sendProfileRequest,\r\n    response: profileResponse,\r\n  } = useHttp();\r\n\r\n  const nameInputRef = useRef();\r\n  const addressInputRef = useRef();\r\n\r\n  //Request to backend for fetching groceries\r\n  const FetchProfileHandler = async (requestJson) => {\r\n    sendProfileRequest({\r\n      url: \"https://groceries-ordering-app-java.herokuapp.com/api/protected/fetchProfile\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: { userEmail: requestJson.userEmail },\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredAddress = addressInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredAddressIsValid = isTenChars(enteredAddress);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      address: enteredAddressIsValid,\r\n    });\r\n\r\n    const formIsValid = enteredNameIsValid && enteredAddressIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      address: enteredAddress,\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const addressControlClasses = `${classes.control} ${\r\n    formInputsValidity.address ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  //FETCHING PROFILE DATA\r\n  useEffect(() => {\r\n    const requestJson = { userEmail };\r\n    FetchProfileHandler(requestJson);\r\n  }, []);\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} value={profileResponse.userName} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={addressControlClasses}>\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input type=\"text\" id=\"address\" ref={addressInputRef} value={profileResponse.userAddress} />\r\n        {!formInputsValidity.address && <p>Please enter your full Address!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}