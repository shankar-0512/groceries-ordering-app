{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const userEmail = useSelector(state => state.login.userId);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const {\n    isLoading: profileIsLoading,\n    sendRequest: sendProfileRequest,\n    response: profileResponse\n  } = useHttp();\n  const {\n    isLoading: orderIsLoading,\n    sendRequest: orderGroceriesRequest,\n    response: orderResponse,\n    resetResponse: resetOrderResponse\n  } = useHttp();\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  }; //Request to backend for fetching groceries\n\n\n  const FetchProfileHandler = async requestJson => {\n    sendProfileRequest({\n      url: \"http://localhost:8080/api/protected/fetchProfile\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        userEmail: requestJson.userEmail\n      },\n      errorMsg: \"Request failed!\"\n    });\n  }; //Request to backend for fetching groceries\n\n\n  const submitOrderHandler = async userData => {\n    orderGroceriesRequest({\n      url: \"https://groceries-ordering-app-java.herokuapp.com/api/protected/orderGroceries\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        userDetails: userData,\n        orderedItems: cartCtx.items\n      },\n      errorMsg: \"Request failed!\"\n    });\n  }; //FETCHING PROFILE DATA\n\n\n  useEffect(() => {\n    const requestJson = {\n      userEmail\n    };\n    FetchProfileHandler(requestJson);\n  }, []);\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Confirming your order...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your order has been placed successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n\n  if (orderResponse.responseCode === 0) {\n    resetOrderResponse();\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!orderIsLoading && !didSubmit && cartModalContent, orderIsLoading && isSubmittingModalContent, !orderIsLoading && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"YOf+CV5RHhnZBUfWaj92Zo3+lcc=\", false, function () {\n  return [useSelector, useHttp, useHttp];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/Cart/Cart.js"],"names":["React","useContext","useState","useEffect","useSelector","Modal","CartItem","classes","CartContext","Checkout","useHttp","Cart","props","userEmail","state","login","userId","isCheckout","setIsCheckout","didSubmit","setDidSubmit","cartCtx","isLoading","profileIsLoading","sendRequest","sendProfileRequest","response","profileResponse","orderIsLoading","orderGroceriesRequest","orderResponse","resetResponse","resetOrderResponse","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","FetchProfileHandler","requestJson","url","method","headers","body","errorMsg","submitOrderHandler","userData","userDetails","orderedItems","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent","responseCode","clearCart"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Checkout from \"./Checkout\";\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst Cart = (props) => {\r\n\r\n  const userEmail = useSelector((state) => state.login.userId);\r\n\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const {\r\n    isLoading: profileIsLoading,\r\n    sendRequest: sendProfileRequest,\r\n    response: profileResponse,\r\n  } = useHttp();\r\n\r\n  const {\r\n    isLoading: orderIsLoading,\r\n    sendRequest: orderGroceriesRequest,\r\n    response: orderResponse,\r\n    resetResponse: resetOrderResponse,\r\n  } = useHttp();\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem(item);\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  //Request to backend for fetching groceries\r\n  const FetchProfileHandler = async (requestJson) => {\r\n    sendProfileRequest({\r\n      url: \"http://localhost:8080/api/protected/fetchProfile\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: { userEmail: requestJson.userEmail },\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  //Request to backend for fetching groceries\r\n  const submitOrderHandler = async (userData) => {\r\n    orderGroceriesRequest({\r\n      url: \"https://groceries-ordering-app-java.herokuapp.com/api/protected/orderGroceries\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: { userDetails: userData, orderedItems: cartCtx.items },\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  //FETCHING PROFILE DATA\r\n  useEffect(() => {\r\n    const requestJson = { userEmail };\r\n    FetchProfileHandler(requestJson);\r\n  }, []);\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Confirming your order...</p>;\r\n\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>Your order has been placed successfully!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  if (orderResponse.responseCode === 0) {\r\n    resetOrderResponse();\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  }\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {!orderIsLoading && !didSubmit && cartModalContent}\r\n      {orderIsLoading && isSubmittingModalContent}\r\n      {!orderIsLoading && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}