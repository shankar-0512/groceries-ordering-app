{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\Groceries\\\\AvailableGroceries.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./GroceryItem/GroceryItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport MealList from \"./GroceryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const {\n    isLoading: mealsIsLoading,\n    error: mealsError,\n    sendRequest: sendMealsRequest,\n    response: mealsResponse,\n    resetError: resetMealsError,\n    resetResponse: resetMealsResponse\n  } = useHttp(); //Request to backend for verification email\n\n  const FetchMeals = async () => {\n    sendMealsRequest({\n      url: \"http://localhost:8080/api/protected/fetchGroceries\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {},\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  useEffect(() => {\n    FetchMeals();\n  }, []);\n  console.log(mealsIsLoading);\n\n  if (mealsIsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MealList, {\n    meals: mealsResponse\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AvailableMeals, \"TAL+eMsgYXZttyxLy/io3Qp31vk=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/Groceries/AvailableGroceries.js"],"names":["useEffect","useState","Card","MealItem","classes","useHttp","MealList","AvailableMeals","isLoading","mealsIsLoading","error","mealsError","sendRequest","sendMealsRequest","response","mealsResponse","resetError","resetMealsError","resetResponse","resetMealsResponse","FetchMeals","url","method","headers","body","errorMsg","console","log","MealsLoading"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM;AACJC,IAAAA,SAAS,EAAEC,cADP;AAEJC,IAAAA,KAAK,EAAEC,UAFH;AAGJC,IAAAA,WAAW,EAAEC,gBAHT;AAIJC,IAAAA,QAAQ,EAAEC,aAJN;AAKJC,IAAAA,UAAU,EAAEC,eALR;AAMJC,IAAAA,aAAa,EAAEC;AANX,MAOFd,OAAO,EAPX,CAF2B,CAW3B;;AACA,QAAMe,UAAU,GAAG,YAAY;AAC7BP,IAAAA,gBAAgB,CAAC;AACfQ,MAAAA,GAAG,EAAE,oDADU;AAEfC,MAAAA,MAAM,EAAE,MAFO;AAGfC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHM;AAMfC,MAAAA,IAAI,EAAE,EANS;AAOfC,MAAAA,QAAQ,EAAE;AAPK,KAAD,CAAhB;AASD,GAVD;;AAYAzB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYlB,cAAZ;;AAEA,MAAIA,cAAJ,EAAoB;AAClB,wBACE;AAAS,MAAA,SAAS,EAAEL,OAAO,CAACwB,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEb;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvCD;;GAAMR,c;UASAF,O;;;KATAE,c;AAyCN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./GroceryItem/GroceryItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport MealList from \"./GroceryList\";\r\n\r\nconst AvailableMeals = () => {\r\n\r\n  const {\r\n    isLoading: mealsIsLoading,\r\n    error: mealsError,\r\n    sendRequest: sendMealsRequest,\r\n    response: mealsResponse,\r\n    resetError: resetMealsError,\r\n    resetResponse: resetMealsResponse,\r\n  } = useHttp();\r\n\r\n  //Request to backend for verification email\r\n  const FetchMeals = async () => {\r\n    sendMealsRequest({\r\n      url: \"http://localhost:8080/api/protected/fetchGroceries\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: {},\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    FetchMeals();\r\n  }, []);\r\n\r\n  console.log(mealsIsLoading);\r\n\r\n  if (mealsIsLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return <MealList meals={mealsResponse} />;\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}