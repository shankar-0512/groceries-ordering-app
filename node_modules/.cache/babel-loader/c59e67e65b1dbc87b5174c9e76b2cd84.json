{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\Groceries\\\\AvailableGroceries.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport classes from \"./AvailableGroceries.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport MealList from \"./GroceryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const {\n    isLoading: mealsIsLoading,\n    sendRequest: sendGroceriesRequest,\n    response: mealsResponse\n  } = useHttp(); //Request to backend for fetching groceries\n\n  const FetchGroceries = async requestJson => {\n    sendGroceriesRequest({\n      url: \"http://localhost:8080/api/protected/fetchGroceries\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        test: requestJson.test\n      },\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"here\");\n    FetchGroceries();\n  }, []);\n\n  if (mealsIsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MealList, {\n    meals: mealsResponse\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AvailableMeals, \"wdrm2PLF+gwx2w2DbayOYB4SL/o=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/Groceries/AvailableGroceries.js"],"names":["useEffect","classes","useHttp","MealList","AvailableMeals","isLoading","mealsIsLoading","sendRequest","sendGroceriesRequest","response","mealsResponse","FetchGroceries","requestJson","url","method","headers","body","test","errorMsg","console","log","MealsLoading"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AACJC,IAAAA,SAAS,EAAEC,cADP;AAEJC,IAAAA,WAAW,EAAEC,oBAFT;AAGJC,IAAAA,QAAQ,EAAEC;AAHN,MAIFR,OAAO,EAJX,CAD2B,CAO3B;;AACA,QAAMS,cAAc,GAAG,MAAOC,WAAP,IAAuB;AAC5CJ,IAAAA,oBAAoB,CAAC;AACnBK,MAAAA,GAAG,EAAE,oDADc;AAEnBC,MAAAA,MAAM,EAAE,MAFW;AAGnBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHU;AAMnBC,MAAAA,IAAI,EAAE;AAACC,QAAAA,IAAI,EAAGL,WAAW,CAACK;AAApB,OANa;AAOnBC,MAAAA,QAAQ,EAAE;AAPS,KAAD,CAApB;AASD,GAVD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAT,IAAAA,cAAc;AACf,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIL,cAAJ,EAAoB;AAClB,wBACE;AAAS,MAAA,SAAS,EAAEL,OAAO,CAACoB,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEX;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlCD;;GAAMN,c;UAKAF,O;;;KALAE,c;AAoCN,eAAeA,cAAf","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nimport classes from \"./AvailableGroceries.module.css\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport MealList from \"./GroceryList\";\r\n\r\nconst AvailableMeals = () => {\r\n  const {\r\n    isLoading: mealsIsLoading,\r\n    sendRequest: sendGroceriesRequest,\r\n    response: mealsResponse,\r\n  } = useHttp();\r\n\r\n  //Request to backend for fetching groceries\r\n  const FetchGroceries = async (requestJson) => {\r\n    sendGroceriesRequest({\r\n      url: \"http://localhost:8080/api/protected/fetchGroceries\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: {test : requestJson.test},\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"here\")\r\n    FetchGroceries();\r\n  }, []);\r\n\r\n  if (mealsIsLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return <MealList meals={mealsResponse} />;\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}