{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isTenChars = value => value.trim().length >= 10;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    address: true\n  });\n  const nameInputRef = useRef();\n  const addressInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredAddressIsValid = isTenChars(enteredAddress);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      address: enteredAddressIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredAddressIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      address: enteredAddress\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const addressControlClasses = `${classes.control} ${formInputsValidity.address ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        value: profileResponse.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addressControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        ref: addressInputRef,\n        value: profileResponse.userAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), !formInputsValidity.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your full Address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"cvAVN9vIwIUWtR1qcZgWoNwRe+E=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isTenChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","address","nameInputRef","addressInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredAddress","enteredNameIsValid","enteredAddressIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","addressControlClasses","form","profileResponse","userName","userAddress","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\n\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isTenChars = (value) => value.trim().length >= 10;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    address: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const addressInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredAddress = addressInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredAddressIsValid = isTenChars(enteredAddress);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      address: enteredAddressIsValid,\r\n    });\r\n\r\n    const formIsValid = enteredNameIsValid && enteredAddressIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      address: enteredAddress,\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const addressControlClasses = `${classes.control} ${\r\n    formInputsValidity.address ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          ref={nameInputRef}\r\n          value={profileResponse.userName}\r\n        />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={addressControlClasses}>\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"address\"\r\n          ref={addressInputRef}\r\n          value={profileResponse.userAddress}\r\n        />\r\n        {!formInputsValidity.address && <p>Please enter your full Address!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}