{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\Groceries\\\\AvailableGroceries.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport classes from \"./AvailableGroceries.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport GroceryList from \"./GroceryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const {\n    isLoading: mealsIsLoading,\n    sendRequest: sendGroceriesRequest,\n    response: mealsResponse\n  } = useHttp();\n  const [category, setCategory] = useState(\"\"); //Request to backend for fetching groceries\n\n  const FetchGroceries = async requestJson => {\n    sendGroceriesRequest({\n      url: \"http://localhost:8080/api/protected/fetchGroceries\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        category: requestJson.category\n      },\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  useEffect(() => {\n    const requestJson = {\n      category\n    };\n    FetchGroceries(requestJson);\n  }, []);\n\n  function categoryUpdate(userCategory) {\n    setCategory(userCategory);\n  }\n\n  if (mealsIsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (mealsResponse === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No groceries available at this moment! Kindly check back later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(GroceryList, {\n    meals: mealsResponse,\n    categoryUpdate: categoryUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AvailableMeals, \"OcLMqJPpmt+4GenY7afZXEq/o4U=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/Groceries/AvailableGroceries.js"],"names":["useEffect","useState","classes","useHttp","GroceryList","AvailableMeals","isLoading","mealsIsLoading","sendRequest","sendGroceriesRequest","response","mealsResponse","category","setCategory","FetchGroceries","requestJson","url","method","headers","body","errorMsg","categoryUpdate","userCategory","MealsLoading"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AACJC,IAAAA,SAAS,EAAEC,cADP;AAEJC,IAAAA,WAAW,EAAEC,oBAFT;AAGJC,IAAAA,QAAQ,EAAEC;AAHN,MAIFR,OAAO,EAJX;AAMA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC,CAP2B,CAS3B;;AACA,QAAMa,cAAc,GAAG,MAAOC,WAAP,IAAuB;AAC5CN,IAAAA,oBAAoB,CAAC;AACnBO,MAAAA,GAAG,EAAE,oDADc;AAEnBC,MAAAA,MAAM,EAAE,MAFW;AAGnBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHU;AAMnBC,MAAAA,IAAI,EAAE;AAACP,QAAAA,QAAQ,EAAEG,WAAW,CAACH;AAAvB,OANa;AAOnBQ,MAAAA,QAAQ,EAAE;AAPS,KAAD,CAApB;AASD,GAVD;;AAYApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,WAAW,GAAG;AAACH,MAAAA;AAAD,KAApB;AACAE,IAAAA,cAAc,CAACC,WAAD,CAAd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASM,cAAT,CAAwBC,YAAxB,EAAqC;AACnCT,IAAAA,WAAW,CAACS,YAAD,CAAX;AACD;;AAED,MAAIf,cAAJ,EAAoB;AAClB,wBACE;AAAS,MAAA,SAAS,EAAEL,OAAO,CAACqB,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAGZ,aAAa,KAAK,EAArB,EAAwB;AACtB,wBACE;AAAS,MAAA,SAAS,EAAET,OAAO,CAACqB,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBAAO,QAAC,WAAD;AAAa,IAAA,KAAK,EAAEZ,aAApB;AAAmC,IAAA,cAAc,EAAEU;AAAnD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhDD;;GAAMhB,c;UAKAF,O;;;KALAE,c;AAkDN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport classes from \"./AvailableGroceries.module.css\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport GroceryList from \"./GroceryList\";\r\n\r\nconst AvailableMeals = () => {\r\n  const {\r\n    isLoading: mealsIsLoading,\r\n    sendRequest: sendGroceriesRequest,\r\n    response: mealsResponse,\r\n  } = useHttp();\r\n\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  //Request to backend for fetching groceries\r\n  const FetchGroceries = async (requestJson) => {\r\n    sendGroceriesRequest({\r\n      url: \"http://localhost:8080/api/protected/fetchGroceries\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: {category: requestJson.category},\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const requestJson = {category}\r\n    FetchGroceries(requestJson);\r\n  }, []);\r\n\r\n  function categoryUpdate(userCategory){\r\n    setCategory(userCategory);\r\n  }\r\n\r\n  if (mealsIsLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if(mealsResponse === \"\"){\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>No groceries available at this moment! Kindly check back later.</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return <GroceryList meals={mealsResponse} categoryUpdate={categoryUpdate} />;\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}