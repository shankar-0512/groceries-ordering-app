{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  const {\n    isLoading: mealsIsLoading,\n    error: mealsError,\n    sendRequest: sendMealsRequest,\n    response: mealsResponse,\n    resetError: resetMealsError,\n    resetResponse: resetMealsResponse\n  } = useHttp(); //Request to backend for verification email\n\n  const FetchMeals = async requestJson => {\n    sendMealsRequest({\n      url: \"https://space-ticket-booking-java.herokuapp.com/api/protected/verifyUser\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {},\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  useEffect(() => {\n    const requestJson = {\n      userEmail\n    };\n    FetchMeals();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"6Hdk4CMcz3g/qnORfDOv25lwFuY=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","MealItem","classes","useHttp","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","mealsIsLoading","error","mealsError","sendRequest","sendMealsRequest","response","mealsResponse","resetError","resetMealsError","resetResponse","resetMealsResponse","FetchMeals","requestJson","url","method","headers","body","errorMsg","userEmail","MealsLoading","MealsError","mealsList","map","meal","id","name","description","price"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AAEA,QAAM;AACJQ,IAAAA,SAAS,EAAEI,cADP;AAEJC,IAAAA,KAAK,EAAEC,UAFH;AAGJC,IAAAA,WAAW,EAAEC,gBAHT;AAIJC,IAAAA,QAAQ,EAAEC,aAJN;AAKJC,IAAAA,UAAU,EAAEC,eALR;AAMJC,IAAAA,aAAa,EAAEC;AANX,MAOFlB,OAAO,EAPX,CAL2B,CAc3B;;AACA,QAAMmB,UAAU,GAAG,MAAOC,WAAP,IAAuB;AACxCR,IAAAA,gBAAgB,CAAC;AACfS,MAAAA,GAAG,EAAE,0EADU;AAEfC,MAAAA,MAAM,EAAE,MAFO;AAGfC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHM;AAMfC,MAAAA,IAAI,EAAE,EANS;AAOfC,MAAAA,QAAQ,EAAE;AAPK,KAAD,CAAhB;AASD,GAVD;;AAYA9B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,WAAW,GAAG;AAAEM,MAAAA;AAAF,KAApB;AACAP,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIf,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEL,OAAO,CAAC4B,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIrB,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEP,OAAO,CAAC6B,UAA5B;AAAA,6BACE;AAAA,kBAAItB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMuB,SAAS,GAAG3B,KAAK,CAAC4B,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,IAAA,IAAI,EAAED,IAAI,CAACE,IAHb;AAIE,IAAA,WAAW,EAAEF,IAAI,CAACG,WAJpB;AAKE,IAAA,KAAK,EAAEH,IAAI,CAACI;AALd,KACOJ,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEjC,OAAO,CAACG,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAK2B;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjED;;GAAM5B,c;UAYAD,O;;;KAZAC,c;AAmEN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\nimport classes from './AvailableMeals.module.css';\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  const {\r\n    isLoading: mealsIsLoading,\r\n    error: mealsError,\r\n    sendRequest: sendMealsRequest,\r\n    response: mealsResponse,\r\n    resetError: resetMealsError,\r\n    resetResponse: resetMealsResponse,\r\n  } = useHttp();\r\n\r\n  //Request to backend for verification email\r\n  const FetchMeals = async (requestJson) => {\r\n    sendMealsRequest({\r\n      url: \"https://space-ticket-booking-java.herokuapp.com/api/protected/verifyUser\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: {},\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const requestJson = { userEmail };\r\n    FetchMeals();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}