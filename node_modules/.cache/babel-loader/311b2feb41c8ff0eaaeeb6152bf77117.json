{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\LoginAuth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useRef, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { loginActions } from \"../../store/login-slice\";\nimport Card from \"../LoginAuth/Login\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../CommonInput/Input\";\nimport styles from \"../CommonInput/Input.module.css\";\nimport classes from \"./Login.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport Modal from \"../UI/Modal\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentPassword = \"\"; //************REDUCERS************//\n\nfunction emailReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction passwordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim().length > 6\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction nameReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction rePasswordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() === currentPassword.trim()\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() === currentPassword.trim()\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction planetReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction dateReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction Login(props) {\n  _s();\n\n  console.log(\"hello\"); //************DECLARATIONS************//\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch(); //STATES\n\n  const [formisvalid, setFormisvalid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [nameState, dispatchName] = useReducer(nameReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [rePasswordState, dispatchRePassword] = useReducer(rePasswordReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [planetState, dispatchPlanet] = useReducer(planetReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [dateState, dispatchDate] = useReducer(dateReducer, {\n    value: \"\",\n    isvalid: null\n  }); //REFS\n\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const rePasswordInputRef = useRef();\n  const planetInputRef = useRef();\n  const dateInputRef = useRef();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest,\n    response,\n    resetError,\n    resetResponse\n  } = useHttp(); //checking for form validity every 500ms\n\n  useEffect(function () {\n    const identifier = setTimeout(() => {\n      if (props.signUpFlag) {\n        setFormisvalid(nameState.isvalid && emailState.isvalid && passwordState.isvalid && rePasswordState.isvalid && planetState.isvalid && dateState.isvalid);\n      } else {\n        setFormisvalid(emailState.isvalid && passwordState.isvalid);\n      }\n    }, 200);\n    return function clearTimer() {\n      clearTimeout(identifier);\n    };\n  }, //use effect dependencies - will re run every time below dependencies change.\n  //Therefore useffect is guaranteed to use the latest state.\n  [nameState.isvalid, emailState.isvalid, passwordState.isvalid, rePasswordState.isvalid, planetState.isvalid, dateState.isvalid, props.signUpFlag, formisvalid]); //************API CALLS************//\n  //Request to backend for login and sign-up\n\n  const SignUpRequestHandler = async requestJson => {\n    sendTaskRequest({\n      url: \"https://space-ticket-booking-java.herokuapp.com/api/protected/loginAuth\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        name: requestJson.enteredName,\n        email: requestJson.enteredEmail,\n        password: requestJson.enteredPassword,\n        rePassword: requestJson.enteredRePassword,\n        basePlanet: requestJson.enteredPlanet,\n        dob: requestJson.enteredDate,\n        signUpF: requestJson.signUpFlag\n      },\n      errorMsg: \"Request failed!\"\n    });\n  }; //************STATE HANDLERS************//\n\n\n  function nameChangeHandler(event) {\n    dispatchName({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateNameHandler() {\n    dispatchName({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function emailChangeHandler(event) {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateEmailHandler() {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function passwordChangeHandler(event) {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    currentPassword = event.target.value;\n  }\n\n  function validatePasswordHandler() {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function rePasswordChangeHandler(event) {\n    dispatchRePassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateRePasswordHandler() {\n    dispatchRePassword({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function planetChangeHandler(event) {\n    dispatchPlanet({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validatePlanetHandler() {\n    dispatchPlanet({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function dateChangeHandler(event) {\n    dispatchDate({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateDateHandler() {\n    dispatchDate({\n      type: \"INPUT_BLUR\"\n    });\n  } //************ACTION HANDLERS************//\n\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (props.signUpFlag) {\n      const enteredName = nameState.value;\n      const enteredEmail = emailState.value;\n      const enteredPassword = passwordState.value;\n      const enteredRePassword = rePasswordState.value;\n      const enteredPlanet = planetState.value;\n      const enteredDate = dateState.value;\n\n      if (formisvalid) {\n        const requestJson = {\n          enteredName,\n          enteredEmail,\n          enteredPassword,\n          enteredRePassword,\n          enteredPlanet,\n          enteredDate,\n          signUpFlag: \"Y\"\n        };\n        SignUpRequestHandler(requestJson);\n        setFormisvalid(false);\n        props.postSignUp();\n        dispatchName({\n          type: \"CLEAR\"\n        });\n        dispatchEmail({\n          type: \"CLEAR\"\n        });\n        dispatchPassword({\n          type: \"CLEAR\"\n        });\n        dispatchRePassword({\n          type: \"CLEAR\"\n        });\n        dispatchPlanet({\n          type: \"CLEAR\"\n        });\n        dispatchDate({\n          type: \"CLEAR\"\n        });\n      }\n    } else {\n      const enteredEmail = emailState.value;\n      const enteredPassword = passwordState.value;\n\n      if (formisvalid) {\n        const requestJson = {\n          enteredEmail,\n          enteredPassword,\n          signUpFlag: \"N\"\n        };\n        SignUpRequestHandler(requestJson);\n        setFormisvalid(false);\n        dispatchEmail({\n          type: \"CLEAR\"\n        });\n        dispatchPassword({\n          type: \"CLEAR\"\n        });\n      }\n    }\n  }\n\n  function closeErrorModal() {\n    resetError();\n    resetResponse();\n  }\n\n  if (response.responseCode === 0) {\n    dispatch(loginActions.LoginStateHandler());\n    dispatch(loginActions.UpdateUserId(response.userId));\n    localStorage.setItem(\"isLoggedIn\", 1);\n    localStorage.setItem(\"userId\", response.userId);\n    closeErrorModal();\n  }\n\n  useEffect(() => {\n    if (props.loginF) {\n      navigate(\"/login\");\n    }\n  }, [props.loginF, navigate]); //************MODALS************//\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.btn,\n      onClick: closeErrorModal,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n\n  const loginModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: response.responseMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this); //************LOADING SPINNERS************//\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"LhKpPKUL6QrOhI/i7oPO5IC/qP4=\", false, function () {\n  return [useNavigate, useDispatch, useHttp];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/LoginAuth/Login.js"],"names":["React","useReducer","useRef","useEffect","useState","useDispatch","Outlet","useNavigate","loginActions","Card","Button","Input","styles","classes","useHttp","LoadingSpinner","Modal","moment","currentPassword","emailReducer","state","action","type","value","val","isvalid","includes","passwordReducer","trim","length","nameReducer","rePasswordReducer","planetReducer","dateReducer","Login","props","console","log","navigate","dispatch","formisvalid","setFormisvalid","emailState","dispatchEmail","nameState","dispatchName","passwordState","dispatchPassword","rePasswordState","dispatchRePassword","planetState","dispatchPlanet","dateState","dispatchDate","nameInputRef","emailInputRef","passwordInputRef","rePasswordInputRef","planetInputRef","dateInputRef","isLoading","error","sendRequest","sendTaskRequest","response","resetError","resetResponse","identifier","setTimeout","signUpFlag","clearTimer","clearTimeout","SignUpRequestHandler","requestJson","url","method","headers","body","name","enteredName","email","enteredEmail","password","enteredPassword","rePassword","enteredRePassword","basePlanet","enteredPlanet","dob","enteredDate","signUpF","errorMsg","nameChangeHandler","event","target","validateNameHandler","emailChangeHandler","validateEmailHandler","passwordChangeHandler","validatePasswordHandler","rePasswordChangeHandler","validateRePasswordHandler","planetChangeHandler","validatePlanetHandler","dateChangeHandler","validateDateHandler","submitHandler","preventDefault","postSignUp","closeErrorModal","responseCode","LoginStateHandler","UpdateUserId","userId","localStorage","setItem","loginF","modalActions","actions","btn","loginModalContent","total","responseMessage","login"],"mappings":"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","sourcesContent":["import React, { useReducer, useRef, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { loginActions } from \"../../store/login-slice\";\nimport Card from \"../LoginAuth/Login\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../CommonInput/Input\";\nimport styles from \"../CommonInput/Input.module.css\";\nimport classes from \"./Login.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport Modal from \"../UI/Modal\";\nimport moment from \"moment\";\n\nvar currentPassword = \"\";\n\n//************REDUCERS************//\n\nfunction emailReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isvalid: state.value.includes(\"@\") };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n\n  return { value: \"\", isvalid: false };\n}\n\nfunction passwordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isvalid: state.value.trim().length > 6 };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n\n  return { value: \"\", isvalid: false };\n}\n\nfunction nameReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.trim() !== \"\" };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isvalid: state.value.trim() !== \"\" };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n\n  return { value: \"\", isvalid: false };\n}\n\nfunction rePasswordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() === currentPassword.trim(),\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() === currentPassword.trim(),\n    };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n\n  return { value: \"\", isvalid: false };\n}\n\nfunction planetReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.trim() !== \"\" };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\",\n    };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n  return { value: \"\", isvalid: false };\n}\n\nfunction dateReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.trim() !== \"\" };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\",\n    };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n  return { value: \"\", isvalid: false };\n}\n\nfunction Login(props) {\n\n  console.log(\"hello\")\n  //************DECLARATIONS************//\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  //STATES\n  const [formisvalid, setFormisvalid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [nameState, dispatchName] = useReducer(nameReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [rePasswordState, dispatchRePassword] = useReducer(rePasswordReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [planetState, dispatchPlanet] = useReducer(planetReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [dateState, dispatchDate] = useReducer(dateReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  //REFS\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const rePasswordInputRef = useRef();\n  const planetInputRef = useRef();\n  const dateInputRef = useRef();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest,\n    response,\n    resetError,\n    resetResponse,\n  } = useHttp();\n\n  //checking for form validity every 500ms\n  useEffect(\n    function () {\n      const identifier = setTimeout(() => {\n        if (props.signUpFlag) {\n          setFormisvalid(\n            nameState.isvalid &&\n              emailState.isvalid &&\n              passwordState.isvalid &&\n              rePasswordState.isvalid &&\n              planetState.isvalid &&\n              dateState.isvalid\n          );\n        } else {\n          setFormisvalid(emailState.isvalid && passwordState.isvalid);\n        }\n      }, 200);\n\n      return function clearTimer() {\n        clearTimeout(identifier);\n      };\n    },\n    //use effect dependencies - will re run every time below dependencies change.\n    //Therefore useffect is guaranteed to use the latest state.\n    [\n      nameState.isvalid,\n      emailState.isvalid,\n      passwordState.isvalid,\n      rePasswordState.isvalid,\n      planetState.isvalid,\n      dateState.isvalid,\n      props.signUpFlag,\n      formisvalid,\n    ]\n  );\n\n  //************API CALLS************//\n\n  //Request to backend for login and sign-up\n  const SignUpRequestHandler = async (requestJson) => {\n    sendTaskRequest({\n      url: \"https://space-ticket-booking-java.herokuapp.com/api/protected/loginAuth\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: {\n        name: requestJson.enteredName,\n        email: requestJson.enteredEmail,\n        password: requestJson.enteredPassword,\n        rePassword: requestJson.enteredRePassword,\n        basePlanet: requestJson.enteredPlanet,\n        dob: requestJson.enteredDate,\n        signUpF: requestJson.signUpFlag,\n      },\n      errorMsg: \"Request failed!\",\n    });\n  };\n\n  //************STATE HANDLERS************//\n\n  function nameChangeHandler(event) {\n    dispatchName({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validateNameHandler() {\n    dispatchName({ type: \"INPUT_BLUR\" });\n  }\n  function emailChangeHandler(event) {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validateEmailHandler() {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  }\n  function passwordChangeHandler(event) {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n    currentPassword = event.target.value;\n  }\n  function validatePasswordHandler() {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  }\n  function rePasswordChangeHandler(event) {\n    dispatchRePassword({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validateRePasswordHandler() {\n    dispatchRePassword({ type: \"INPUT_BLUR\" });\n  }\n  function planetChangeHandler(event) {\n    dispatchPlanet({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validatePlanetHandler() {\n    dispatchPlanet({ type: \"INPUT_BLUR\" });\n  }\n  function dateChangeHandler(event) {\n    dispatchDate({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validateDateHandler() {\n    dispatchDate({ type: \"INPUT_BLUR\" });\n  }\n\n  //************ACTION HANDLERS************//\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (props.signUpFlag) {\n      const enteredName = nameState.value;\n      const enteredEmail = emailState.value;\n      const enteredPassword = passwordState.value;\n      const enteredRePassword = rePasswordState.value;\n      const enteredPlanet = planetState.value;\n      const enteredDate = dateState.value;\n\n      if (formisvalid) {\n        const requestJson = {\n          enteredName,\n          enteredEmail,\n          enteredPassword,\n          enteredRePassword,\n          enteredPlanet,\n          enteredDate,\n          signUpFlag: \"Y\",\n        };\n\n        SignUpRequestHandler(requestJson);\n        setFormisvalid(false);\n        props.postSignUp();\n        dispatchName({ type: \"CLEAR\" });\n        dispatchEmail({ type: \"CLEAR\" });\n        dispatchPassword({ type: \"CLEAR\" });\n        dispatchRePassword({ type: \"CLEAR\" });\n        dispatchPlanet({ type: \"CLEAR\" });\n        dispatchDate({ type: \"CLEAR\" });\n      }\n    } else {\n      const enteredEmail = emailState.value;\n      const enteredPassword = passwordState.value;\n\n      if (formisvalid) {\n        const requestJson = {\n          enteredEmail,\n          enteredPassword,\n          signUpFlag: \"N\",\n        };\n\n        SignUpRequestHandler(requestJson);\n        setFormisvalid(false);\n        dispatchEmail({ type: \"CLEAR\" });\n        dispatchPassword({ type: \"CLEAR\" });\n      }\n    }\n  }\n  function closeErrorModal() {\n    resetError();\n    resetResponse();\n  }\n\n  if (response.responseCode === 0) {\n    dispatch(loginActions.LoginStateHandler());\n    dispatch(loginActions.UpdateUserId(response.userId));\n    localStorage.setItem(\"isLoggedIn\", 1);\n    localStorage.setItem(\"userId\", response.userId);\n    closeErrorModal();\n  }\n\n  useEffect(() => {\n    if (props.loginF) {\n      navigate(\"/login\");\n    }\n  }, [props.loginF, navigate]);\n\n  //************MODALS************//\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <Button className={classes.btn} onClick={closeErrorModal}>\n        Close\n      </Button>\n    </div>\n  );\n\n  const loginModalContent = (\n    <React.Fragment>\n      <div className={classes.total}>\n        <span>{response.responseMessage}</span>\n      </div>\n    </React.Fragment>\n  );\n\n  //************LOADING SPINNERS************//\n\n  if (isLoading) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <Card className={classes.login}>\n\n      \n    </Card>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}