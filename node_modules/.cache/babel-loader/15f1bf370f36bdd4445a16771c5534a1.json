{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\groceries-ordering-app\\\\src\\\\components\\\\Groceries\\\\AvailableGroceries.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./AvailableGroceries.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport GroceryList from \"./GroceryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableGroceries = () => {\n  _s();\n\n  const {\n    isLoading: groceriesIsLoading,\n    sendRequest: sendGroceriesRequest,\n    response: groceriesResponse,\n    resetResponse: resetGroceriesResponse\n  } = useHttp();\n  const [category, setCategory] = useState(\"\"); //Request to backend for fetching groceries\n\n  const FetchGroceries = async requestJson => {\n    sendGroceriesRequest({\n      url: \"https://groceries-ordering-app-java.herokuapp.com/api/protected/fetchGroceries\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        category: requestJson.category\n      },\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  useEffect(() => {\n    const requestJson = {\n      category\n    };\n    FetchGroceries(requestJson);\n  }, [category]);\n\n  function categoryUpdate(userCategory) {\n    setCategory(userCategory);\n  }\n\n  if (groceriesIsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (groceriesResponse === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No groceries are available at this moment! Kindly check back later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (groceriesResponse !== \"\") {\n    resetGroceriesResponse();\n  }\n\n  return /*#__PURE__*/_jsxDEV(GroceryList, {\n    groceries: groceriesResponse,\n    categoryUpdate: categoryUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AvailableGroceries, \"Uq+xCTAeoqrltOaeUuX93+XW2v0=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableGroceries;\nexport default AvailableGroceries;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableGroceries\");","map":{"version":3,"sources":["D:/React_Projects/groceries-ordering-app/src/components/Groceries/AvailableGroceries.js"],"names":["useEffect","useState","LoadingSpinner","classes","useHttp","GroceryList","AvailableGroceries","isLoading","groceriesIsLoading","sendRequest","sendGroceriesRequest","response","groceriesResponse","resetResponse","resetGroceriesResponse","category","setCategory","FetchGroceries","requestJson","url","method","headers","body","errorMsg","categoryUpdate","userCategory","MealsLoading"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM;AACJC,IAAAA,SAAS,EAAEC,kBADP;AAEJC,IAAAA,WAAW,EAAEC,oBAFT;AAGJC,IAAAA,QAAQ,EAAEC,iBAHN;AAIJC,IAAAA,aAAa,EAAEC;AAJX,MAKFV,OAAO,EALX;AAOA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC,CAR+B,CAU/B;;AACA,QAAMgB,cAAc,GAAG,MAAOC,WAAP,IAAuB;AAC5CR,IAAAA,oBAAoB,CAAC;AACnBS,MAAAA,GAAG,EAAE,gFADc;AAEnBC,MAAAA,MAAM,EAAE,MAFW;AAGnBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHU;AAMnBC,MAAAA,IAAI,EAAE;AAAEP,QAAAA,QAAQ,EAAEG,WAAW,CAACH;AAAxB,OANa;AAOnBQ,MAAAA,QAAQ,EAAE;AAPS,KAAD,CAApB;AASD,GAVD;;AAYAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,WAAW,GAAG;AAAEH,MAAAA;AAAF,KAApB;AACAE,IAAAA,cAAc,CAACC,WAAD,CAAd;AACD,GAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;;AAKA,WAASS,cAAT,CAAwBC,YAAxB,EAAsC;AACpCT,IAAAA,WAAW,CAACS,YAAD,CAAX;AACD;;AAED,MAAIjB,kBAAJ,EAAwB;AACtB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAII,iBAAiB,KAAK,EAA1B,EAA8B;AAC5B,wBACE;AAAS,MAAA,SAAS,EAAET,OAAO,CAACuB,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAGd,iBAAiB,KAAK,EAAzB,EAA4B;AAC1BE,IAAAA,sBAAsB;AACvB;;AAED,sBAAO,QAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,iBAAxB;AAA2C,IAAA,cAAc,EAAEY;AAA3D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArDD;;GAAMlB,kB;UAMAF,O;;;KANAE,kB;AAuDN,eAAeA,kBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport classes from \"./AvailableGroceries.module.css\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport GroceryList from \"./GroceryList\";\r\n\r\nconst AvailableGroceries = () => {\r\n  const {\r\n    isLoading: groceriesIsLoading,\r\n    sendRequest: sendGroceriesRequest,\r\n    response: groceriesResponse,\r\n    resetResponse: resetGroceriesResponse,\r\n  } = useHttp();\r\n\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  //Request to backend for fetching groceries\r\n  const FetchGroceries = async (requestJson) => {\r\n    sendGroceriesRequest({\r\n      url: \"https://groceries-ordering-app-java.herokuapp.com/api/protected/fetchGroceries\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: { category: requestJson.category },\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const requestJson = { category };\r\n    FetchGroceries(requestJson);\r\n  }, [category]);\r\n\r\n  function categoryUpdate(userCategory) {\r\n    setCategory(userCategory);\r\n  }\r\n\r\n  if (groceriesIsLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (groceriesResponse === \"\") {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>No groceries are available at this moment! Kindly check back later.</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if(groceriesResponse !== \"\"){\r\n    resetGroceriesResponse();\r\n  }\r\n\r\n  return <GroceryList groceries={groceriesResponse} categoryUpdate={categoryUpdate} />;\r\n};\r\n\r\nexport default AvailableGroceries;\r\n"]},"metadata":{},"sourceType":"module"}